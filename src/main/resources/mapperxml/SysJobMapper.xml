<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bxoon.job.mapper.SysJobMapper">
  <resultMap id="BaseResultMap" type="com.bxoon.job.domain.SysJob">
    <!--@mbg.generated-->
    <!--@Table sys_job-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="job_group" jdbcType="VARCHAR" property="jobGroup" />
    <result column="method_name" jdbcType="VARCHAR" property="methodName" />
    <result column="method_params" jdbcType="VARCHAR" property="methodParams" />
    <result column="cron_expression" jdbcType="VARCHAR" property="cronExpression" />
    <result column="misfire_policy" jdbcType="VARCHAR" property="misfirePolicy" />
    <result column="concurrent" jdbcType="CHAR" property="concurrent" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>

    <resultMap type="com.bxoon.job.domain.SysJob" id="SysJobResult">
        <id property="id" column="id"/>
        <result property="jobName" column="job_name"/>
        <result property="jobGroup" column="job_group"/>
        <result property="methodName" column="method_name"/>
        <result property="methodParams" column="method_params"/>
        <result property="cronExpression" column="cron_expression"/>
        <result property="misfirePolicy" column="misfire_policy"/>
        <result property="status" column="status"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, job_name, job_group, method_name, method_params, cron_expression, misfire_policy, 
    concurrent, `status`, create_by, create_time, update_by, update_time, remark
  </sql>

  <sql id="selectJobVo">
    select id, job_name, job_group, method_name, method_params, cron_expression, misfire_policy, status, create_by, create_time, remark, update_by, update_time
    from sys_job
  </sql>

  <select id="selectJobList" parameterType="com.bxoon.job.domain.SysJob" resultMap="SysJobResult">
    <include refid="selectJobVo"/>
    <where>
      <if test="jobName != null and jobName != ''">
        AND job_name like concat('%', #{jobName}, '%')
      </if>
      <if test="status != null and status != ''">
        AND status = #{status}
      </if>
      <if test="methodName != null and methodName != ''">
        AND method_name like concat('%', #{methodName}, '%')
      </if>
    </where>
  </select>

  <select id="selectJobAll" resultMap="SysJobResult">
    <include refid="selectJobVo"/>
  </select>

  <select id="selectJobById" parameterType="Long" resultMap="SysJobResult">
    <include refid="selectJobVo"/>
    where id = #{jobId}
  </select>

  <delete id="deleteJobById" parameterType="Long">
    delete from sys_job where id = #{jobId}
  </delete>

  <delete id="deleteJobByIds" parameterType="Long">
    delete from sys_job where sys_job.id in
    <foreach collection="array" item="jobId" open="(" separator="," close=")">
      #{jobId}
    </foreach>
  </delete>

  <update id="updateJob" parameterType="com.bxoon.job.domain.SysJob">
    update sys_job
    <set>
      <if test="jobName != null and jobName != ''">job_name = #{jobName},</if>
      <if test="jobGroup != null and jobGroup != ''">job_group = #{jobGroup},</if>
      <if test="methodName != null and methodName != ''">method_name = #{methodName},</if>
      <if test="methodParams != null">method_params = #{methodParams},</if>
      <if test="cronExpression != null and cronExpression != ''">cron_expression = #{cronExpression},</if>
      <if test="misfirePolicy != null and misfirePolicy != ''">misfire_policy = #{misfirePolicy},</if>
      <if test="status !=null">status = #{status},</if>
      <if test="remark != null and remark != ''">remark = #{remark},</if>
      <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
      update_time = sysdate()
    </set>
    where id = #{id}
  </update>

    <insert id="insertJob" parameterType="com.bxoon.job.domain.SysJob" useGeneratedKeys="true" keyProperty="jobId">
        insert into sys_job(
        <if test="id != null and id != 0">
            id,
        </if>
        <if test="jobName != null and jobName != ''">
            job_name,
        </if>
        <if test="jobGroup != null and jobGroup != ''">
            job_group,
        </if>
        <if test="methodName != null and methodName != ''">
            method_name,
        </if>
        <if test="methodParams != null and methodParams != ''">
            method_params,
        </if>
        <if test="cronExpression != null and cronExpression != ''">
            cron_expression,
        </if>
        <if test="misfirePolicy != null and misfirePolicy != ''">
            misfire_policy,
        </if>
        <if test="status != null and status != ''">
            status,
        </if>
        <if test="remark != null and remark != ''">
            remark,
        </if>
        <if test="createBy != null and createBy != ''">
            create_by,
        </if>
        create_time)values(
        <if test="id != null and id != 0">
            #{id},
        </if>
        <if test="jobName != null and jobName != ''">
            #{jobName},
        </if>
        <if test="jobGroup != null and jobGroup != ''">
            #{jobGroup},
        </if>
        <if test="methodName != null and methodName != ''">
            #{methodName},
        </if>
        <if test="methodParams != null and methodParams != ''">
            #{methodParams},
        </if>
        <if test="cronExpression != null and cronExpression != ''">
            #{cronExpression},
        </if>
        <if test="misfirePolicy != null and misfirePolicy != ''">
            #{misfirePolicy},
        </if>
        <if test="status != null and status != ''">
            #{status},
        </if>
        <if test="remark != null and remark != ''">
            #{remark},
        </if>
        <if test="createBy != null and createBy != ''">
            #{createBy},
        </if>
        sysdate())
    </insert>
</mapper>